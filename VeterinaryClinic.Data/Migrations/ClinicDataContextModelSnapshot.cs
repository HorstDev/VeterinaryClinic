// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeterinaryClinic.Data;

#nullable disable

namespace VeterinaryClinic.Data.Migrations
{
    [DbContext(typeof(ClinicDataContext))]
    partial class ClinicDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("VeterinaryClinic.Data.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("MessageForUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("TypeOfAnimal")
                        .HasColumnType("text");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("VeterinaryClinic.Data.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<List<int>>("ServicesId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Толасова Виктория Викторовна",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Лаптев Валерий Викторович",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Морозов Александр Васильевич",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Мамлеева Аделя Рифкатовна",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Куркурин Николай Дмитриевич",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Лайко Наталья Владимировна",
                            ServicesId = new List<int> { 1, 2, 3, 4, 5, 6 }
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("LongDescription")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("ReceptionTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LongDescription = "Введение вакцины вызывает выработку организмом животного антител против вирусных болезней. Есть несколько основных опасных инфекционных болезней: у собак — это чума плотоядных, гепатит, парвовироз, лептоспироз, бешенство; у кошек — вирусный ринотрахеит, калицивироз, панлейкопения кошек и бешенство.Наиболее подвержены риску заражения животные, гуляющие на улице, хотя домашние животные, которые не имеют контакта с внешней средой, также могут подхватить любую инфекцию.Владелец, придя домой с улицы, на своей обуви и одежде может принести любые бактерии, вирусы или яйца гельминтов.",
                            Name = "Вакцинация",
                            Price = 500,
                            ReceptionTimeMinutes = 20,
                            ShortDescription = "Прививки для кошек и собак с выдачей ветеринарного паспорта."
                        },
                        new
                        {
                            Id = 2,
                            LongDescription = "Кастрация и стерилизация — это профилактика болезней матки, яичников, молочных желез у сук и кошек. У кобелей — профилактика болезней по мужской линии, в частности, простатита, аденомы простаты. По медицинским показаниям кастрация проводится достаточно часто: при гнойных воспалениях, опухолях женских органов, кист яичников. Зачастую это единственный способ лечения сахарного диабета, гормональных нозологий, а также действенное средство для избавления кобелей и котов от некоторых дерматологических заболеваний, патологий семенников, других органов размножения. Например, при хирургическом лечении мочекаменной болезни, промежностной грыжи у кобелей мелких пород кастрация также обязательна, — рассказывает доктор ветслужбы Захаров и Фарафонтова Алексей Кулишов. — После операции, поверьте, животные, в отличие от человека, не испытывают чувства неполноценности, угрызений совести по поводу отсутствия либидо. Кастрация и стерилизация продлевают жизнь и улучшают ее качество!",
                            Name = "Стерилизация",
                            Price = 1000,
                            ReceptionTimeMinutes = 60,
                            ShortDescription = "Кастрация котов и собак, операции по стерилизации кошек и собак"
                        },
                        new
                        {
                            Id = 3,
                            LongDescription = "Высочайшая квалификация врачей-хирургов позволяет проводить сложные хирургические манипуляции, например: остеосинтез и создание искусственных связок, абдоминальная хирургия, пластическая хирургия и многое другое. Владельцу животного необходимо осознавать,что общая анестезия(наркоз) и оперативное вмешательство связано с определенной степенью риска для животного,что может вызвать послеоперационные осложнения или неблагоприятный исход операции. Поэтому перед операцией животное должно быть обследовано, для того, чтобы удостовериться, что наркоз не принесёт животному вреда. Обследование животного перед операцией, которая проводится под общим наркозом, должно включать следующее: ЭКГ, УЗИ, Общий клинический анализ крови, биохимия крови.",
                            Name = "Хирургия",
                            Price = 10000,
                            ReceptionTimeMinutes = 120,
                            ShortDescription = "Хирургическое лечение опухолей, травм, врожденных нарушений."
                        },
                        new
                        {
                            Id = 4,
                            LongDescription = "Уважаемые пациенты клиники! Вы можете круглосуточно получить бесплатную консультацию ветеринара по телефону. Вы можете задать вопрос ветеринарам клиники, которые постоянно находятся по указанному номеру и готовы помочь советом, проанализировать признаки заболевания, оказать посильную ветеринарную помощь по телефону.Убедительно просим Вас учесть тот факт, что невозможно вылечить или поставить точный диагноз заочно, не осмотрев животное, не проведя необходимых исследований.Поэтому ветпомощь по телефону может быть оказана врачом лишь в ограниченном объеме.Консультация ветеринара по телефону охватывает вопросы здоровья, содержания, кормления животных, аналогов препаратов, схемы вакцинации, необходимости стерилизации, проведения хирургического лечения и т.д. Консультация ветеринара по телефону – это такой вид консультации, который является первоочередным в ситуациях, когда животное нуждается в срочной помощи. Получив советы ветеринара, Вы будете четко знать, как действовать дальше.",
                            Name = "Консультации",
                            Price = 100,
                            ReceptionTimeMinutes = 30,
                            ShortDescription = "Советы по лечению и уходу за домашними животными. Назначение лекарств."
                        },
                        new
                        {
                            Id = 5,
                            LongDescription = "Иногда лечение животных лучше осуществлять на дому. Перевозка – причины сильного стресса, что плохо сказывается на его общем состоянии. Своевременное реагирование медперсонала на экстренные вызовы помогает сэкономить драгоценное время. От этого часто зависит жизнь питомца. Если иммунитет любимца снижен, при контакте с другими животными в ветклинике существует вероятность подхватить новое заболевание. Выезд опытного ветеринарного врача на дом исключает риск повторного заражения. Привычная домашняя обстановка обеспечивает высокий уровень комфорта, зверек ведет себя спокойно. Ветеринары беспрепятственно произведут осмотр и установят максимально точный диагноз. В зависимости от вида болезни и питомца, на дом выезжают ветеринары различной направленности: герпетолог, ратолог, орнитолог, хирург, офтальмолог, онколог и другие ветдоктора. Выезд узкого специалиста на указанный адрес возможен круглосуточно.",
                            Name = "Лечение на дому",
                            Price = 5000,
                            ReceptionTimeMinutes = 120,
                            ShortDescription = "Выезд ветеринара к вам домой.Осмотр и проведение операции на дому.Послеоперационное наблюдение."
                        },
                        new
                        {
                            Id = 6,
                            LongDescription = "Важность косметических процедур у животных многие недооценивают. Но, как говорится: «незнание закона не освобождает от отвественности». Невыполнение некоторых простых манипуляций может вести к достаточно серьёзным последствиям. Наши услуги: чистка ушей, подрезание когтей, чистка ПАЖ и многое другое",
                            Name = "Косметические операции",
                            Price = 5000,
                            ReceptionTimeMinutes = 120,
                            ShortDescription = "Стрижка собак и кошек. Удаление когтей. Купирование ушей и хвостов"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.Data.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PetOwner"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "gorstsergei@mail.ru",
                            Password = "12345",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.Data.Entities.Appointment", b =>
                {
                    b.HasOne("VeterinaryClinic.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("VeterinaryClinic.Data.User", b =>
                {
                    b.HasOne("VeterinaryClinic.Data.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VeterinaryClinic.Data.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
